[
    {
        "Close Progress Indicator": {
            "prefix": "XrmUtilityCloseProgressIndicator",
            "description": "Closes a progress dialog box.",
            "body": "Xrm.Utility.closeProgressIndicator();"
        }
    },
    {
        "Get Allowed Status Transitions": {
            "prefix": "XrmUtilityGetAllowedStatusTransitions",
            "description": "Returns the valid state transitions for the specified entity type and state code.",
            "body": [
                "Xrm.Utility.getAllowedStatusTransitions('${1:account}', ${2:690970000}).then(",
                "\tfunction success(result) {",
                "\t\t// perform operations",
                "\t\t$0",
                "\t},",
                "\tfunction (error) {",
                "\t\tconsole.log(error.message);",
                "\t\t// handle error conditions",
                "\t}",
                ");"
            ]
        }
    },
    {
        "Get Entity Metadata": {
            "prefix": "XrmUtilityGetEntityMetadata",
            "description": "Returns the entity metadata for the specified entity.",
            "body": [
                "Xrm.Utility.getEntityMetadata('${1:account}', [ '${2:name}' ]).then(",
                "\tfunction success(result) {",
                "\t\t// perform operations",
                "\t\t$0",
                "\t},",
                "\tfunction (error) {",
                "\t\tconsole.log(error.message);",
                "\t\t// handle error conditions",
                "\t}",
                ");"
            ]
        }
    },
    {
        "Get Global Context": {
            "prefix": "XrmUtilityGetGlobalContext",
            "description": "Gets the global context.",
            "body": "Xrm.Utility.getGlobalContext()"
        }
    },
    {
        "Get Global Context Client": {
            "prefix": "XrmUtilityGetGlobalContextClient",
            "description": "Provides access to the methods to determine which client is being used, whether the client is connected to the server, and what kind of device is being used.",
            "body": "Xrm.Utility.getGlobalContext().client"
        }
    },
    {
        "Get Global Context Client Get Client": {
            "prefix": "XrmUtilityGetGlobalContextClientGetClient",
            "description": "Returns a value to indicate which client the script is executing in.",
            "body": "Xrm.Utility.getGlobalContext().client.getClient()"
        }
    },
    {
        "Get Global Context Client Get Client State": {
            "prefix": "XrmUtilityGetGlobalContextClientGetClientState",
            "description": "Returns a value to indicate the state of the client.",
            "body": "Xrm.Utility.getGlobalContext().client.getClientState()"
        }
    },
    {
        "Get Global Context Client Get Form Factor": {
            "prefix": "XrmUtilityGetGlobalContextClientGetFormFactor",
            "description": "Returns information about the kind of device the user is using.",
            "body": "Xrm.Utility.getGlobalContext().client.getFormFactor()"
        }
    },
    {
        "Get Global Context Client Is Offline": {
            "prefix": "XrmUtilityGetGlobalContextClientIsOffline",
            "description": "Returns information whether the server is online or offline.",
            "body": "Xrm.Utility.getGlobalContext().client.isOffline()"
        }
    },
    {
        "Get Global Context Organization Settings": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettings",
            "description": "Returns information about the current organization settings.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings;"
        }
    },
    {
        "Get Global Context Organization Settings Attributes": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsAttributes",
            "description": "Returns attributes and their values as key:value pairs that are available for the organization entity. Additional values will be available as attributes if they are specified as attribute dependencies in the web resource dependency list. The key will be the attribute logical name.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.attributes;"
        }
    },
    {
        "Get Global Context Organization Settings Base Currency Id": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsBaseCurrencyId",
            "description": "Returns the ID of the base currency for the current organization.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.baseCurrencyId;"
        }
    },
    {
        "Get Global Context Organization Settings Default Country Code": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsDefaultCountryCode",
            "description": "Returns the default country/region code for phone numbers for the current organization.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.defaultCountryCode;"
        }
    },
    {
        "Get Global Context Organization Settings Is Auto Save Enabled": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsIsAutoSaveEnabled",
            "description": "Indicates whether the auto-save option is enabled for the current organization.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.isAutoSaveEnabled;"
        }
    },
    {
        "Get Global Context Organization Settings Language Id": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsLanguageId",
            "description": "Returns the preferred language ID for the current organization.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.languageId;"
        }
    },
    {
        "Get Global Context Organization Settings Organization Id": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsOrganizationId",
            "description": "Returns the ID of the current organization.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.organizationId;"
        }
    },
    {
        "Get Global Context Organization Settings Unique Name": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsUniqueName",
            "description": "Returns the unique name of the current organization.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.uniqueName;"
        }
    },
    {
        "Get Global Context Organization Settings Use Skype Protocol": {
            "prefix": "XrmUtilityGetGlobalContextOrganizationSettingsUseSkypeProtocol",
            "description": "Indicates whether the Skype protocol is used for the current organization.",
            "body": "Xrm.Utility.getGlobalContext().organizationSettings.useSkypeProtocol;"
        }
    },
    {
        "Get Global Context User Settings": {
            "prefix": "XrmUtilityGetGlobalContextUserSettings",
            "description": "Returns information about the current user settings.",
            "body": "Xrm.Utility.getGlobalContext().userSettings;"
        }
    },
    {
        "Get Global Context User Settings Date Formatting Info": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsDateFormattingInfo",
            "description": "Returns the date formatting information for the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.dateFormattingInfo;"
        }
    },
    {
        "Get Global Context User Settings Default Dashboard Id": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsDefaultDashboardId",
            "description": "Returns the ID of the default dashboard for the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.defaultDashboardId;"
        }
    },
    {
        "Get Global Context User Settings Is Guided Help Enabled": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsIsGuidedHelpEnabled",
            "description": "Indicates whether guided help is enabled for the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.isGuidedHelpEnabled;"
        }
    },
    {
        "Get Global Context User Settings Is High Contrast Enabled": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsIsHighContrastEnabled",
            "description": "Indicates whether high contrast is enabled for the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.isHighContrastEnabled;"
        }
    },
    {
        "Get Global Context User Settings Is RTL": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsIsRTL",
            "description": "Indicates whether the language for the current user is a right-to-left (RTL) language.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.isRTL;"
        }
    },
    {
        "Get Global Context User Settings Language Id": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsLanguageId",
            "description": "Returns the language ID for the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.languageId;"
        }
    },
    {
        "Get Global Context User Settings Security Role Privileges": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsSecurityRolePrivileges",
            "description": "Returns an array of strings that represent the GUID values of each of the security role privilege that the user is associated with or any teams that the user is associated with.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.securityRolePrivileges;"
        }
    },
    {
        "Get Global Context User Settings Security Roles": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsSecurityRoles",
            "description": "Returns an array of strings that represent the GUID values of each of the security role that the user is associated with or any teams that the user is associated with.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.securityRoles;"
        }
    },
    {
        "Get Global Context User Settings Transaction Currency Id": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsTransactionCurrencyId",
            "description": "Returns the transaction currency ID for the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.transactionCurrencyId;"
        }
    },
    {
        "Get Global Context User Settings User Id": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsUserId",
            "description": "Returns the GUID of the SystemUser.Id value for the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.userId;"
        }
    },
    {
        "Get Global Context User Settings User Name": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsUserName",
            "description": "Returns the name of the current user.",
            "body": "Xrm.Utility.getGlobalContext().userSettings.userName;"
        }
    },
    {
        "Get Global Context User Settings Get Time Zone Offset Minutes": {
            "prefix": "XrmUtilityGetGlobalContextUserSettingsGetTimeZoneOffsetMinutes",
            "description": "Returns the difference in minutes between the local time and Coordinated Universal Time (UTC).",
            "body": "Xrm.Utility.getGlobalContext().userSettings.getTimeZoneOffsetMinutes;"
        }
    },
    {
        "Get Global Context Get Advanced Config Setting": {
            "prefix": "XrmUtilityGetGlobalContextGetAdvancedConfigSetting",
            "description": "Returns information about the advanced configuration settings for the organization.",
            "body": "Xrm.Utility.getGlobalContext().getAdvancedConfigSetting('${1|MaxChildIncidentNumber,MaxIncidentMergeNumber|}');"
        }
    },
    {
        "Get Global Context Get Client Url": {
            "prefix": "XrmUtilityGetGlobalContextGetUrl",
            "description": "Returns the base URL that was used to access the application.",
            "body": "Xrm.Utility.getGlobalContext().getClientUrl();"
        }
    },
    {
        "Get Global Context Get Current App Name": {
            "prefix": "XrmUtilityGetGlobalContextGetCurrentAppName",
            "description": "Returns the name of the current business app in Customer Engagement.",
            "body": [
                "Xrm.Utility.getGlobalContext().getCurrentAppName().then(",
                "\tfunction success(result) {",
                "\t\t// perform operations on record creation",
                "\t\t$0",
                "\t},",
                "\tfunction (error) {",
                "\t\tconsole.log(error.message);",
                "\t\t// handle error conditions",
                "\t}",
                ");"
            ]
        }
    },
    {
        "Get Global Context Get Current App Properties": {
            "prefix": "XrmUtilityGetGlobalContextGetCurrentAppProperties",
            "description": "Returns the properties of the current business app in Customer Engagement.",
            "body": [
                "Xrm.Utility.getGlobalContext().getCurrentAppProperties().then(",
                "\tfunction success(result) {",
                "\t\t// perform operations on record creation",
                "\t\t$0",
                "\t},",
                "\tfunction (error) {",
                "\t\tconsole.log(error.message);",
                "\t\t// handle error conditions",
                "\t}",
                ");"
            ]
        }
    },
    {
        "Get Global Context Get Current App Url": {
            "prefix": "XrmUtilityGetGlobalContextGetCurrentAppUrl",
            "description": "Returns the URL of the current business app in Customer Engagement.",
            "body": "Xrm.Utility.getGlobalContext().getCurrentAppUrl();"
        }
    },
    {
        "Get Global Context Get Version": {
            "prefix": "XrmUtilityGetGlobalContextGetVersion",
            "description": "Returns the version number of the Dynamics 365 for Customer Engagement apps instance.",
            "body": "Xrm.Utility.getGlobalContext().getVersion();"
        }
    },
    {
        "Get Global Context Is On Premises": {
            "prefix": "XrmUtilityGetGlobalContextIsOnPremises",
            "description": "Returns a boolean value indicating if the Customer Engagement instance is hosted on-premises or online.",
            "body": "Xrm.Utility.getGlobalContext().isOnPremises();"
        }
    },
    {
        "Get Global Context Prepend Org Name": {
            "prefix": "XrmUtilityGetGlobalContextPrependOrgName",
            "description": "Prefixes the current organization's unique name to a string, typically a URL path.",
            "body": "Xrm.Utility.getGlobalContext().prependOrgName('${1:path}');"
        }
    },
    {
        "Get Learning Path Attribute Name": {
            "prefix": "XrmUtilityGetLearningPathAttributeName",
            "description": "Returns the name of the DOM attribute expected by the Learning Path (guided help) Content Designer for identifying UI controls in the Dynamics 365 for Customer Engagement apps form.",
            "body": "Xrm.Utility.getLearningPathAttributeName();"
        }
    },
    {
        "Get Resource String": {
            "prefix": "XrmUtilityGetResourceString",
            "description": "Returns the localized string for a given key associated with the specified web resource.",
            "body": "Xrm.Utility.getResourceString('${1:webResourceName}', ${2:key});"
        }
    },
    {
        "Invoke Process Action": {
            "prefix": "XrmUtilityInvokeProcessAction",
            "description": "Invokes an action based on the specified parameters.",
            "body": [
                "Xrm.Utility.invokeProcessAction('${1:name}', ${2:parameters}).then(",
                "\tfunction success(result) {",
                "\t\t$0",
                "\t},",
                "\tfunction (error) {",
                "\t\tconsole.log(error.message);",
                "\t\t// handle error conditions",
                "\t}",
                ");"
            ]
        }
    },
    {
        "Lookup Objects": {
            "prefix": "XrmUtilityLookupObjects",
            "description": "Opens a lookup control to select one or more items.",
            "body": [
                "var lookupObjects = {",
                "\tallowMultiSelect: ${1|true,false|},",
                "\tdefaultEntityType: '${2:account}',",
                "\tdefaultViewId: '${3:00000000-0000-0000-0000-000000000001}',",
                "\tdisableMru: ${4|true,false|},",
                "\tentityTypes: [ '${5:account}' ],",
                "\tshowBarcodeScanner: ${6|true,false|},",
                "\tviewIds: [ '${7:00000000-0000-0000-0000-000000000001}' ],",
                "\tfilters: [{ filterXml: ${8:fetchXml}, entityLogicalName: '${9:account}' }]",
                "};",
                "",
                "Xrm.Utility.lookupObjects(lookupOptions).then(",
                "\tfunction success(result) {",
                "\t\t$0",
                "\t},",
                "\tfunction (error) {",
                "\t\tconsole.log(error.message);",
                "\t\t// handle error conditions",
                "\t}",
                ");"
            ]
        }
    },
    {
        "Refresh Parent Grid": {
            "prefix": "XrmUtilityRefreshParentGrid",
            "description": "Refreshes the parent grid containing the specified record.",
            "body": [
                "var lookupOptions = {",
                "\tentityType: '${1:entityType}',",
                "\tid: ${2:id},",
                "\tname: '${3:name}'",
                "};",
                "",
                "Xrm.Utility.refreshParentGrid(lookupOptions);"
            ]
        }
    },
    {
        "Show Progress Indicator": {
            "prefix": "XrmUtilityShowProgressIndicator",
            "description": "Displays a progress dialog with the specified message.",
            "body": "Xrm.Utility.showProgressIndicator('{1:message}');"
        }
    }
]
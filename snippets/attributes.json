[
    {
        "Attribute Add On Change": {
            "prefix": "FormContextAttributeAddOnChange",
            "description": "Sets a function to be called when the OnChange event occurs.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").addOnChange(${2:myFunction});"
            ]
        }
    },
    {
        "Attribute Fire On Change": {
            "prefix": "FormContextAttributeFireOnChange",
            "description": "Causes the OnChange event to occur on the attribute so that any script associated to that event can execute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").fireOnChange();"
            ]
        }
    },
    {
        "Attribute Get Attribute Type": {
            "prefix": "FormContextAttributeGetAttributeType",
            "description": "Returns a string value that represents the type of attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getAttributeType();"
            ]
        }
    },
    {
        "Attribute Get Attribute Type": {
            "prefix": "FormContextAttributeGetAttributeType",
            "description": "Returns a string value that represents the type of attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getAttributeType();"
            ]
        }
    },
    {
        "Attribute Get Format": {
            "prefix": "FormContextAttributeGetFormat",
            "description": "Returns a string value that represents formatting options for the attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getFormat();"
            ]
        }
    },
    {
        "Attribute Get Initial Value": {
            "prefix": "FormContextAttributeGetInitialValue",
            "description": "Returns a value that represents the value set for a Boolean, OptionSet or MultiSelectOptionSet attribute when the form is opened.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getInitialValue();"
            ]
        }
    },
    {
        "Attribute Get Is Dirty": {
            "prefix": "FormContextAttributeGetIsDirty",
            "description": "Returns a Boolean value indicating if there are unsaved changes to the attribute value.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getIsDirty();"
            ]
        }
    },
    {
        "Attribute Get Is Party List": {
            "prefix": "FormContextAttributeGetIsPartyList",
            "description": "Returns a Boolean value indicating whether the lookup represents a partylist lookup. Partylist lookups allow for multiple records to be set, such as the To: field for an email entity record.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getIsPartyList();"
            ]
        }
    },
    {
        "Attribute Get Max": {
            "prefix": "FormContextAttributeGetMax",
            "description": "Returns a number indicating the maximum allowed value for an attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getMax();"
            ]
        }
    },
    {
        "Attribute Get Max Length": {
            "prefix": "FormContextAttributeGetMaxLength",
            "description": "Returns a number indicating the maximum length of a string or memo attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getMaxLength();"
            ]
        }
    },
    {
        "Attribute Get Min": {
            "prefix": "FormContextAttributeGetMin",
            "description": "Returns a number indicating the minimum allowed value for an attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getMin();"
            ]
        }
    },
    {
        "Attribute Get Name": {
            "prefix": "FormContextAttributeGetName",
            "description": "Returns a string representing the logical name of the attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getName();"
            ]
        }
    },
    {
        "Attribute Get Option": {
            "prefix": "FormContextAttributeGetOption",
            "description": "Returns an option object with the value matching the argument (label or enumeration value) passed to the method.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getOption(${2:value});"
            ]
        }
    },
    {
        "Attribute Get Options": {
            "prefix": "FormContextAttributeGetOptions",
            "description": "Returns an array of option objects representing valid options for an attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getOptions();"
            ]
        }
    },
    {
        "Attribute Get Parent": {
            "prefix": "FormContextAttributeGetParent",
            "description": "Returns the formContext.data.entity object that is the parent to all attributes.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getParent();"
            ]
        }
    },
    {
        "Attribute Get Precision": {
            "prefix": "FormContextAttributeGetPrecision",
            "description": "Returns the number of digits allowed to the right of the decimal point.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getPrecision();"
            ]
        }
    },
    {
        "Attribute Get Required Level": {
            "prefix": "FormContextAttributeGetRequiredLevel",
            "description": "Returns a string value indicating whether a value for the attribute is required or recommended.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getRequiredLevel();"
            ]
        }
    },
    {
        "Attribute Get Selected Option": {
            "prefix": "FormContextAttributeGetSelectedOption",
            "description": "Returns the option object or an array of option objects selected in an optionset or multiselectoptionset attribute respectively.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getSelectedOption();"
            ]
        }
    },
    {
        "Attribute Get Submit Mode": {
            "prefix": "FormContextAttributeGetSubmitMode",
            "description": "Returns a string indicating when data from the attribute will be submitted when the record is saved.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getSubmitMode();"
            ]
        }
    },
    {
        "Attribute Get Text": {
            "prefix": "FormContextAttributeGetText",
            "description": "Returns a string value of the text for the currently selected option for an optionset or multiselectoptionset attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getText();"
            ]
        }
    },
    {
        "Attribute Get User Privilege": {
            "prefix": "FormContextAttributeGetUserPrivilege",
            "description": "Returns an object with three Boolean properties corresponding to privileges indicating if the user can create, read or update data values for an attribute. This function is intended for use when Field Level Security modifies a userâ€™s privileges for a particular attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getUserPrivilege();"
            ]
        }
    },
    {
        "Attribute Get Value": {
            "prefix": "FormContextAttributeGetValue",
            "description": "Retrieves the data value for an attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").getValue();"
            ]
        }
    },
    {
        "Attribute Is Valid": {
            "prefix": "FormContextAttributeIsValid",
            "description": "Returns a boolean value to indicate whether the value of an attribute is valid.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").isValid();"
            ]
        }
    },
    {
        "Attribute Remove On Change": {
            "prefix": "FormContextAttributeRemoveOnChange",
            "description": "Removes a function from the OnChange event hander for an attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").removeOnChange(${2:myFunction});"
            ]
        }
    },
    {
        "Attribute Set Precision": {
            "prefix": "FormContextAttributeSetPrecision",
            "description": "Sets the number of digits allowed to the right of the decimal point.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").setPrecision(${2:value});"
            ]
        }
    },
    {
        "Attribute Set Required Level": {
            "prefix": "FormContextAttributeSetRequiredLevel",
            "description": "Sets whether data is required or recommended for the attribute before the record can be saved.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").setRequiredLevel(\"${2:none|required|recommended}\");"
            ]
        }
    },
    {
        "Attribute Set Submit Mode": {
            "prefix": "FormContextAttributeSetSubmitMode",
            "description": "Sets whether data from the attribute will be submitted when the record is saved.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").setSubmitMode(\"${2:always|never|dirty}\");"
            ]
        }
    },
    {
        "Attribute Set Value": {
            "prefix": "FormContextAttributeSetValue",
            "description": "Sets the data value for an attribute.",
            "body": [
                "formContext.getAttribute(\"${1:fieldName}\").setValue(${2:value});"
            ]
        }
    }
]